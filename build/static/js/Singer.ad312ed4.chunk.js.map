{"version":3,"sources":["api/singer.js","app/actions/singer.ts","common/js/singer.js","app/components/singer-detail/SingerDetail.tsx","app/components/singer/Singer.tsx","app/reusablecomponents/listview/ListView.tsx"],"names":["__webpack_require__","d","__webpack_exports__","getSingerList","getSingerDetail","common_js_ws__WEBPACK_IMPORTED_MODULE_0__","_config__WEBPACK_IMPORTED_MODULE_1__","data","Object","assign","commonParams","channel","page","key","pagesize","pagenum","hostUin","needNewCode","platform","jsonp","options","singerId","order","begin","num","songstatus","singermid","setSinger","_actionsTypes__WEBPACK_IMPORTED_MODULE_0__","singer","type","types","SingerClass","_ref","id","name","F_web_music_lhy_react_music_lhy_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","avatar","concat","SingerDetailBase","props","_this","F_web_music_lhy_react_music_lhy_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","F_web_music_lhy_react_music_lhy_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","unmoutedFlag","back","setState","showMusicList","_getSingerDetail","then","res","code","ERR_OK","songs","_normalizeSongs","list","ret","forEach","item","musicData","songid","albummid","push","createSong","state","history","_this2","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_transition_group__WEBPACK_IMPORTED_MODULE_7__","in","timeout","classNames","appear","unmountOnExit","onExited","goBack","components_music_list_MusicList__WEBPACK_IMPORTED_MODULE_11__","singerName","bgImage","Component","SingerDetail","withRouter","connect","cacheData","ANCHOR_HEIGHT","TITLE_HEIGHT","ListView","classCallCheck","possibleConstructorReturn","getPrototypeOf","listview","listGroup","fixed","timer","refresh","current","scrollHandler","pos","is","y","NaN","newY","listHeight","currentIndex","i","length","height1","height2","diff","fixedTop","style","transform","onTouchStartHandler","e","anchorIndex","getData","target","firstTouch","touches","touch","y1","pageY","scrollToElement","childNodes","onTouchMoveHandler","stopPropagation","y2","delta","parseInt","selectItem","getItem","React","createRef","setTimeout","_calculateHeight","clearTimeout","children","height","clientHeight","_this3","shortcutList","map","group","title","substr","react_default","Scroll","className","ref","probeType","index","items","onClick","Lazy_img","containerClassName","sizes","srcset","width","onTouchStart","onTouchMove","data-index","Loading","mapType","hotName","hot","SingerBase","selectSinger","singers","_getSingerList","_normalizeSinger","Fsinger_name","Fsinger_mid","Findex","val","match","sort","b","charCodeAt","reusablecomponents_listview_ListView","Route","path","component","Singer","dispatch","ownProps"],"mappings":"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","file":"static/js/Singer.ad312ed4.chunk.js","sourcesContent":["import {jsonp} from 'common/js/ws'\nimport {commonParams, options} from './config'\n\nexport function getSingerList() {\n  const url = 'https://c.y.qq.com/v8/fcg-bin/v8.fcg'\n\n  const data = Object.assign({}, commonParams, {\n    channel: 'singer',\n    page: 'list',\n    key: 'all_all_all',\n    pagesize: 100,\n    pagenum: 1,\n    hostUin: 0,\n    needNewCode: 0,\n    platform: 'yqq'\n  })\n\n  return jsonp(url, data, options)\n}\n\nexport function getSingerDetail(singerId) {\n  const url = 'https://c.y.qq.com/v8/fcg-bin/fcg_v8_singer_track_cp.fcg'\n\n  const data = Object.assign({}, commonParams, {\n    hostUin: 0,\n    needNewCode: 0,\n    platform: 'yqq',\n    order: 'listen',\n    begin: 0,\n    num: 80,\n    songstatus: 1,\n    singermid: singerId\n  })\n\n  return jsonp(url, data, options)\n}\n\n","import * as types from './actionsTypes'\r\nimport { ISinger, IActionCreator } from 'store/stateTypes'\r\n\r\nexport const setSinger : IActionCreator = (singer:ISinger) => {\r\n    return {\r\n        type: types.SET_SINGER,\r\n        singer\r\n    }\r\n}","export default class SingerClass {\n  constructor({id, name}) {\n    this.id = id\n    this.name = name\n    this.avatar = `https://y.gtimg.cn/music/photo_new/T001R300x300M000${id}.jpg?max_age=2592000`\n  }\n}","import React,{ Component } from 'react'\r\nimport './singer-detail.scss'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { getSingerDetail } from 'api/singer'\r\nimport { connect } from 'react-redux'\r\nimport SingerClass from 'common/js/singer.js'\r\nimport {ERR_OK} from 'api/config'\r\nimport MusicList from 'components/music-list/MusicList'\r\nimport {createSong} from 'common/js/song.js'\r\nimport { withRouter } from 'react-router'\r\n\r\nimport {\r\n    ISong,\r\n    IStoreState,\r\n    ISinger\r\n} from 'store/stateTypes'\r\n\r\ninterface singerDetailStateType{\r\n    showMusicList: boolean,\r\n    songs:Array<ISong>\r\n}\r\n\r\ninterface singerDetailPropType{\r\n    singer:ISinger,\r\n    history:any,\r\n    location:any,\r\n    match:any\r\n}\r\n\r\n\r\nclass SingerDetailBase extends Component<singerDetailPropType, singerDetailStateType>{\r\n    unmoutedFlag:boolean;\r\n    constructor(props:singerDetailPropType){\r\n        super(props)\r\n        this.unmoutedFlag=false\r\n        this.state  = {\r\n            showMusicList: true,\r\n            songs:[]\r\n        }\r\n    }\r\n\r\n    back = () => {\r\n        this.setState({\r\n            showMusicList:false\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.singer && this.props.singer.id < 0){\r\n            this.props.history.push('/singer')\r\n            return\r\n        }\r\n        this._getSingerDetail()\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.unmoutedFlag=true\r\n    }\r\n\r\n    _getSingerDetail = () => {\r\n        getSingerDetail(this.props.singer.id).then((res) => {\r\n            if (res.code === ERR_OK && !this.unmoutedFlag) {\r\n                this.setState({\r\n                    songs: this._normalizeSongs(res.data.list)\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    _normalizeSongs = (list:Array<any>) => {\r\n        let ret:any= []\r\n        list.forEach((item) => {\r\n            let {musicData} = item\r\n            if (musicData.songid && musicData.albummid) {\r\n                ret.push(createSong(musicData))\r\n            }\r\n        })\r\n        return ret\r\n    }\r\n\r\n    render(){\r\n        const { singer } = this.props;\r\n        const { songs } = this.state;\r\n        // console.log(\"singer detail\",singer)\r\n        return(\r\n            <CSSTransition\r\n                in={this.state.showMusicList}\r\n                timeout={500}\r\n                classNames=\"singer-detail-transition\"\r\n                appear={true}\r\n                unmountOnExit\r\n                onExited = { () => {\r\n                    this.props.history.goBack()\r\n                } }\r\n            >\r\n                <MusicList singerName={singer.name} bgImage={singer.avatar} songs={songs} back={this.back}/>\r\n            </CSSTransition>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state:IStoreState) => (\r\n    {\r\n        singer:state.singer\r\n    }\r\n)\r\n\r\nconst SingerDetail = withRouter(connect(mapStateToProps)(SingerDetailBase));\r\n\r\nexport default SingerDetail","import React,{ Component } from 'react'\r\nimport './Singer.scss'\r\nimport {getSingerList} from 'api/singer.js'\r\nimport {ERR_OK} from 'api/config'\r\nimport ListView from 'reuse/listview/ListView'\r\nimport SingerClass from 'common/js/singer.js'\r\nimport {  Route, withRouter } from 'react-router'\r\nimport SingerDetail from '../singer-detail/SingerDetail'\r\nimport { connect } from 'react-redux'\r\nimport {setSinger} from 'actions/singer'\r\n\r\nimport {\r\n    ISinger\r\n} from 'store/stateTypes'\r\nimport { Dispatch } from 'redux'\r\n\r\n\r\ninterface hotType{\r\n    title:string,\r\n    items:Array<ISinger>\r\n}\r\n\r\nclass mapType {\r\n    hot:hotType;\r\n    [index: string]: hotType;\r\n    constructor(hotName:string){\r\n        this.hot={\r\n            title:hotName,\r\n            items:[]\r\n        }\r\n    }\r\n}\r\n\r\nconst HOT_SINGER_LEN = 10\r\nconst HOT_NAME = '热门'\r\n\r\ninterface singerProps{\r\n    setSinger:Function,\r\n    history: any\r\n}\r\n\r\ninterface singerState{\r\n    singers: Array<hotType>\r\n}\r\n\r\nlet cacheData:{\r\n    singers: Array<hotType>\r\n};\r\n\r\nclass SingerBase extends Component<singerProps, singerState>{\r\n    unmoutedFlag:boolean;\r\n    constructor(props: singerProps){\r\n        super(props);\r\n        this.unmoutedFlag=false\r\n        this.state = {\r\n            singers: []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        if(cacheData){\r\n            this.setState(\r\n                {\r\n                    singers: cacheData.singers,\r\n                }\r\n            )\r\n        }else{\r\n            this._getSingerList()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        cacheData = {\r\n            singers:this.state.singers\r\n        }\r\n        this.unmoutedFlag=true\r\n    }\r\n\r\n    _getSingerList() {\r\n        getSingerList().then((res) => {\r\n            if (res.code === ERR_OK && !this.unmoutedFlag) {\r\n                this.setState({\r\n                    singers: this._normalizeSinger(res.data.list)\r\n                })\r\n            }\r\n        })\r\n    }\r\n    _normalizeSinger(list:Array<any>) {\r\n        let map = new mapType(HOT_NAME);\r\n        list.forEach((item, index) => {\r\n            if (index < HOT_SINGER_LEN) {\r\n                map.hot.items.push(new SingerClass({\r\n                    name: item.Fsinger_name,\r\n                    id: item.Fsinger_mid\r\n                }))\r\n            }\r\n            const key = item.Findex\r\n            if (!map[key]) {\r\n                map[key] = {\r\n                    title: key,\r\n                    items: []\r\n                }\r\n            }\r\n            map[key].items.push(new SingerClass({\r\n                name: item.Fsinger_name,\r\n                id: item.Fsinger_mid\r\n            }))\r\n        })\r\n        // 为了得到有序列表，我们需要处理 map\r\n        let ret = []\r\n        let hot = []\r\n        for (let key in map) {\r\n            let val = map[key]\r\n            if (val.title.match(/[a-zA-Z]/)) {\r\n                ret.push(val)\r\n            } else if (val.title === HOT_NAME) {\r\n                hot.push(val)\r\n            }\r\n        }\r\n        ret.sort((a, b) => {\r\n            return a.title.charCodeAt(0) - b.title.charCodeAt(0)\r\n        })\r\n        return hot.concat(ret)\r\n    }\r\n\r\n    selectSinger = (singer:SingerClass) => {\r\n        this.props.history.push(`/singer/${singer.id}`);\r\n        this.props.setSinger(singer)\r\n    }\r\n\r\n    render(){\r\n        const {singers} = this.state\r\n        return(\r\n            <div className=\"singer\">\r\n                <ListView data={singers} getItem={this.selectSinger}/>\r\n                <Route path=\"/singer/:id\" component={SingerDetail}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:Dispatch, ownProps:any) => {\r\n    return {\r\n        setSinger: (singer:ISinger) => (\r\n            dispatch(setSinger(singer))\r\n        )\r\n    }\r\n}\r\n\r\nconst Singer = withRouter(connect(() => ({}), mapDispatchToProps)(SingerBase));\r\n\r\nexport default Singer\r\n\r\n","/**\r\n * @Description:  组件数据类型： Array<dataType>\r\n * @author: liaohuanyu\r\n * @date 2019/2/19\r\n*/\r\n\r\nimport React,{ Component, TouchEvent } from 'react'\r\nimport Loading from 'reuse/loading/Loading'\r\nimport './ListView.scss'\r\nimport LazyImage from 'reuse/lazyimg/Lazy-img'\r\nimport Scroll from 'reuse/scroll/Scroll'\r\nimport {getData} from 'common/js/dom.js'\r\n\r\n//边条每个li的高度\r\nconst ANCHOR_HEIGHT = 18;\r\n//title高度\r\nconst TITLE_HEIGHT = 30;\r\n\r\ntype IItem = {\r\n    id : number\r\n    name : string\r\n    avatar : string\r\n    [index:number]:any\r\n    [key:string]:any\r\n}\r\n\r\ninterface dataType {\r\n    title:string,\r\n    items:Array<IItem>\r\n    [index:number]:any\r\n    [key:string]:any\r\n}\r\n\r\ninterface ListViewProps{\r\n    data : Array<dataType>,\r\n    getItem: Function\r\n}\r\n\r\ninterface touchType{\r\n    y1 : number;\r\n    y2 : number;\r\n    anchorIndex : string;\r\n}\r\n\r\ninterface ListViewState{\r\n    currentIndex : number,\r\n    touch : touchType,\r\n    listHeight:Array<any>\r\n}\r\n\r\nclass ListView extends Component<ListViewProps, ListViewState>{\r\n    listview:React.RefObject<Scroll>;\r\n    listGroup:React.RefObject<HTMLUListElement>;\r\n    fixed:React.RefObject<HTMLDivElement>;\r\n    timer:any\r\n    constructor(props: ListViewProps){\r\n        super(props);\r\n        this.listview = React.createRef();\r\n        this.listGroup = React.createRef();\r\n        this.fixed = React.createRef();\r\n        this.state = {\r\n            listHeight:[],\r\n            currentIndex: 0,\r\n            touch:{\r\n                y1 : 0,\r\n                y2 : 0,\r\n                anchorIndex: \"\"\r\n            }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.timer = setTimeout(()=>{\r\n            this._calculateHeight()\r\n        },1000)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearTimeout(this.timer)\r\n    }\r\n\r\n    refresh = () => {\r\n        this.listview.current && this.listview.current.refresh()\r\n    }\r\n\r\n    _calculateHeight() {\r\n        if(!this.listGroup.current){\r\n            return\r\n        }\r\n        let listHeight = []\r\n        const list = this.listGroup.current.children\r\n        let height = 0\r\n        listHeight.push(height)\r\n        for (let i = 0; i < list.length; i++) {\r\n            let item = list[i]\r\n            height += item.clientHeight\r\n            listHeight.push(height)\r\n        }\r\n        this.setState({\r\n            listHeight\r\n            }\r\n        )\r\n    }\r\n\r\n    scrollHandler = (pos : {x:number,y:number}) => {\r\n        // console.log(\"this\",this)\r\n        if(Object.is(pos.y,NaN) || !this.fixed.current){\r\n            return\r\n        }\r\n        let newY = pos.y;\r\n            const listHeight = this.state.listHeight;\r\n            // 当滚动到顶部，newY>0\r\n            if (newY > 0) {\r\n                this.setState({\r\n                    currentIndex : 0\r\n                })\r\n                return\r\n            }\r\n            // 在中间部分滚动\r\n            for (let i = 0; i < listHeight.length - 1; i++) {\r\n                let height1 = listHeight[i]\r\n                let height2 = listHeight[i + 1]\r\n                if (-newY >= height1 && -newY < height2) {\r\n                    this.setState({\r\n                        currentIndex : i\r\n                    })\r\n                    let diff = height2 + newY;\r\n                    let fixedTop = (diff > 0 && diff < TITLE_HEIGHT) ? diff - TITLE_HEIGHT : 0\r\n                    this.fixed.current.style.transform = `translate3d(0,${fixedTop}px,0)`\r\n                    return\r\n                }\r\n            }\r\n            // 当滚动到底部，且-newY大于最后一个元素的上限\r\n        this.setState({\r\n            currentIndex : listHeight.length - 2\r\n        })\r\n    }\r\n\r\n    onTouchStartHandler : React.TouchEventHandler<HTMLDivElement>= (e) => {\r\n        if(!this.listGroup.current)return\r\n        let anchorIndex = getData(e.target, 'index')\r\n        if(anchorIndex){\r\n            let firstTouch = e.touches[0]\r\n            let touch = Object.assign({}, this.state.touch,{\r\n                y1: firstTouch.pageY,\r\n                anchorIndex\r\n            })\r\n            this.setState({\r\n                currentIndex:anchorIndex,\r\n                touch\r\n            })\r\n            this.listview.current && this.listview.current.scrollToElement(this.listGroup.current.childNodes[anchorIndex], 0)\r\n        }else{\r\n            return\r\n        }\r\n    }\r\n\r\n    onTouchMoveHandler = (e: TouchEvent<Element>)=>{\r\n        e.stopPropagation();\r\n        let firstTouch = e.touches[0]\r\n        let touch = Object.assign({}, this.state.touch,{\r\n            y2: firstTouch.pageY\r\n        })\r\n        this.setState({touch},()=>{\r\n            if(!this.listGroup.current)return\r\n            let delta = (this.state.touch.y2 - this.state.touch.y1) / ANCHOR_HEIGHT | 0\r\n            let anchorIndex = parseInt(this.state.touch.anchorIndex) + delta\r\n            if(anchorIndex<0){\r\n                anchorIndex = 0;\r\n            }else if(anchorIndex > this.listGroup.current.childNodes.length-1){\r\n                anchorIndex = this.listGroup.current.childNodes.length-1;\r\n            }else if(Object.is(anchorIndex, NaN)){\r\n                return\r\n            }\r\n            this.setState({currentIndex:anchorIndex})\r\n            this.listview.current && this.listview.current.scrollToElement(this.listGroup.current.childNodes[anchorIndex], 0)\r\n        })\r\n    }\r\n\r\n    selectItem = (item : any) => {\r\n        this.props.getItem(item)\r\n    }\r\n\r\n    render(){\r\n        const {data} = this.props;\r\n        const {currentIndex} = this.state;\r\n        let shortcutList=data.map((group) => {\r\n            return group.title.substr(0, 1)\r\n        });\r\n        return(\r\n            <Scroll className=\"listview\" ref={this.listview} scrollHandler={this.scrollHandler} probeType={3}>\r\n                <ul ref={this.listGroup}>\r\n                    {\r\n                        !! data.length && data.map((group:{title:string,items:Array<any>}, index)=>(\r\n                            <li className=\"list-group\" key={index} >\r\n                                <h2 className=\"list-group-title\">{group.title}</h2>\r\n                                <ul>\r\n                                    {\r\n                                        !! group.items.length && group.items.map((item:any, index:number)=>(\r\n                                            <li className=\"list-group-item\" key={index} onClick={()=>{this.selectItem(item)}}>\r\n                                                <LazyImage\r\n                                                    className=\"avatarListLazy avatar\"\r\n                                                    containerClassName=\"listview\"\r\n                                                    sizes=\"200px\"\r\n                                                    srcset={item.avatar}\r\n                                                    width=\"60\"\r\n                                                    height=\"60\"\r\n                                                    />\r\n                                                <span className=\"name\">{item.name}</span>\r\n                                            </li>\r\n                                        ))\r\n                                    }\r\n                                </ul>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n                <div className=\"list-shortcut\" onTouchStart={this.onTouchStartHandler} onTouchMove={this.onTouchMoveHandler}>\r\n                    <ul>\r\n                        {\r\n                            !!shortcutList.length && shortcutList.map((item, index)=>{\r\n                                let className = \"item\" + (currentIndex === index? \" current\" : \"\");\r\n                                return <li className={className} key={index} data-index={index}>{item}</li>\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"list-fixed\" ref={this.fixed}>\r\n                    <div className=\"fixed-title\"> {data[currentIndex] ? data[currentIndex].title : ''}</div>\r\n                </div>\r\n                    {\r\n                        !data.length &&\r\n                        <div className=\"loading-container\">\r\n                            <Loading />\r\n                        </div>\r\n                    }\r\n            </Scroll>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListView\r\n\r\n"],"sourceRoot":""}